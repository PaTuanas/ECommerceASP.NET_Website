@model IEnumerable<ECommerceC_.ViewModels.ProductVM>
@{
    ViewData["Title"] = "Index";
    Layout = "_ProductList";
}
<!-- Single Page Header start -->
@section BreadCrumb {
    <div class="container-fluid page-header py-5">
        <h1 class="text-center text-white display-6">Shop</h1>
        <ol class="breadcrumb justify-content-center mb-0">
            <li class="breadcrumb-item"><a href="#">Home</a></li>
            <li class="breadcrumb-item"><a href="#">Pages</a></li>
            <li class="breadcrumb-item active text-white">Shop</li>
        </ol>
    </div>
}

<!-- Single Page Header End -->
<!-- Fruits Shop Start-->
@if (TempData != null && TempData.ContainsKey("Message") && TempData["Message"] != null && @TempData["Message"].ToString().Contains("Cannot")) {
    <p class="alert-danger">@TempData["Message"]</p>
} else
{
    <p class="alert-success">@TempData["Message"]</p>
}


@await Html.PartialAsync("ProductItem", Model)
<div class="col-12">
    <div class="pagination d-flex justify-content-center mt-5">
        <a href="#" class="rounded">&laquo;</a>
        <a href="#" class="active rounded">1</a>
        <a href="#" class="rounded">2</a>
        <a href="#" class="rounded">3</a>
        <a href="#" class="rounded">4</a>
        <a href="#" class="rounded">5</a>
        <a href="#" class="rounded">6</a>
        <a href="#" class="rounded">&raquo;</a>
    </div>
</div>
<!-- Fruits Shop End-->